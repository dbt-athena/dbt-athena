name: functional-tests

on:
  # we use pull_request_target to run the CI also for forks
  pull_request_target: # Please read https://securitylab.github.com/research/github-actions-preventing-pwn-requests/ before using
    types: [opened, reopened, synchronize, labeled]
  push:
    branches: [main]

env:
  DBT_TEST_ATHENA_DATABASE: awsdatacatalog
  DBT_TEST_ATHENA_SCHEMA: dbt-tests
  DBT_TEST_ATHENA_WORK_GROUP: athena-dbt-tests
  DBT_TEST_ATHENA_THREADS: 16
  DBT_TEST_ATHENA_POLL_INTERVAL: 0.5

jobs:
  functional-tests:
    name: Functional Test
    # trigger on PRs with label 'enable-ci' or on push to main branch
    if: contains(github.event.pull_request.labels.*.name, 'enable-functional-tests') || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        aws-region: ['us-east-1', 'eu-west-1', 'eu-west-2', 'eu-central-1']
    permissions:
      id-token: write
      contents: read
    env:
      DBT_TEST_ATHENA_S3_STAGING_DIR: s3://dbt-athena-query-results-${{ matrix.aws-region }}
      DBT_TEST_ATHENA_REGION_NAME: ${{ matrix.aws-region }}
    steps:
      # when triggering the pr using pull_request_target, GITHUB_REF is set to main branch
      # this workaround allow to pick the correct branch name
      - name: Set Target branch
        run: |
          if [ -n "${GITHUB_HEAD_REF}" ]; then
            export TARGET_BRANCH=${GITHUB_HEAD_REF/refs\/heads\//}
            echo "Running on PR branch ${TARGET_BRANCH}"
          else
            export TARGET_BRANCH=${GITHUB_REF_NAME}
            echo "Running on branch ${TARGET_BRANCH}"
          fi
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.TARGET_BRANCH }}
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          make install_deps
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ASSUMABLE_ROLE_NAME }}
          aws-region: ${{ matrix.aws-region }}
      - name: Functional Test
        run: |
          pytest -n 8 tests/functional
